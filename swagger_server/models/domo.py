# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.voice import Voice
# from typing import List, Dict
from ..util import deserialize_model

from sqlalchemy import Table, Column, ForeignKey, String, Integer, Text
from sqlalchemy.orm import relationship, backref
from swagger_server.models.base import Base


class Domo(Base):
    __tablename__ = 'domo'

    name = Column(String(128))
    datetime = Column(Text)
    timezone = Column(String(128))
    # voice = Column(String(128))
    emotion = Column(String(128))

    users = relationship("User", backref="domo")
    apps = relationship("App", backref="domo")

# class Domo(Model):
#     """
#     NOTE: This class is auto generated by the swagger code generator program.
#     Do not edit the class manually.
#     """
#     def __init__(self, id: int=None, name: str=None, date_time: datetime=None, timezone: str=None, voice: Voice=None, emotion: str=None):
#         """
#         Domo - a model defined in Swagger
#
#         :param id: The id of this Domo.
#         :type id: int
#         :param name: The name of this Domo.
#         :type name: str
#         :param date_time: The date_time of this Domo.
#         :type date_time: datetime
#         :param timezone: The timezone of this Domo.
#         :type timezone: str
#         :param voice: The voice of this Domo.
#         :type voice: Voice
#         :param emotion: The emotion of this Domo.
#         :type emotion: str
#         """
#         self.swagger_types = {
#             'id': int,
#             'name': str,
#             'date_time': datetime,
#             'timezone': str,
#             'voice': Voice,
#             'emotion': str
#         }
#
#         self.attribute_map = {
#             'id': 'id',
#             'name': 'name',
#             'date_time': 'DateTime',
#             'timezone': 'Timezone',
#             'voice': 'voice',
#             'emotion': 'emotion'
#         }
#
#         self._id = id
#         self._name = name
#         self._date_time = date_time
#         self._timezone = timezone
#         self._voice = voice
#         self._emotion = emotion

    @classmethod
    def from_dict(cls, dikt) -> 'Domo':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Domo of this Domo.
        :rtype: Domo
        """
        return deserialize_model(dikt, cls)

    # @property
    # def id(self) -> int:
    #     """
    #     Gets the id of this Domo.
    #
    #     :return: The id of this Domo.
    #     :rtype: int
    #     """
    #     return self._id
    #
    # @id.setter
    # def id(self, id: int):
    #     """
    #     Sets the id of this Domo.
    #
    #     :param id: The id of this Domo.
    #     :type id: int
    #     """
    #
    #     self._id = id
    #
    # @property
    # def name(self) -> str:
    #     """
    #     Gets the name of this Domo.
    #
    #     :return: The name of this Domo.
    #     :rtype: str
    #     """
    #     return self._name
    #
    # @name.setter
    # def name(self, name: str):
    #     """
    #     Sets the name of this Domo.
    #
    #     :param name: The name of this Domo.
    #     :type name: str
    #     """
    #
    #     self._name = name
    #
    # @property
    # def date_time(self) -> datetime:
    #     """
    #     Gets the date_time of this Domo.
    #
    #     :return: The date_time of this Domo.
    #     :rtype: datetime
    #     """
    #     return self._date_time
    #
    # @date_time.setter
    # def date_time(self, date_time: datetime):
    #     """
    #     Sets the date_time of this Domo.
    #
    #     :param date_time: The date_time of this Domo.
    #     :type date_time: datetime
    #     """
    #
    #     self._date_time = date_time
    #
    # @property
    # def timezone(self) -> str:
    #     """
    #     Gets the timezone of this Domo.
    #
    #     :return: The timezone of this Domo.
    #     :rtype: str
    #     """
    #     return self._timezone
    #
    # @timezone.setter
    # def timezone(self, timezone: str):
    #     """
    #     Sets the timezone of this Domo.
    #
    #     :param timezone: The timezone of this Domo.
    #     :type timezone: str
    #     """
    #
    #     self._timezone = timezone
    #
    # @property
    # def voice(self) -> Voice:
    #     """
    #     Gets the voice of this Domo.
    #
    #     :return: The voice of this Domo.
    #     :rtype: Voice
    #     """
    #     return self._voice
    #
    # @voice.setter
    # def voice(self, voice: Voice):
    #     """
    #     Sets the voice of this Domo.
    #
    #     :param voice: The voice of this Domo.
    #     :type voice: Voice
    #     """
    #
    #     self._voice = voice
    #
    # @property
    # def emotion(self) -> str:
    #     """
    #     Gets the emotion of this Domo.
    #
    #     :return: The emotion of this Domo.
    #     :rtype: str
    #     """
    #     return self._emotion
    #
    # @emotion.setter
    # def emotion(self, emotion: str):
    #     """
    #     Sets the emotion of this Domo.
    #
    #     :param emotion: The emotion of this Domo.
    #     :type emotion: str
    #     """
    #
    #     self._emotion = emotion
