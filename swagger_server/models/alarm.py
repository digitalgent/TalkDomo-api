# coding: utf-8

from __future__ import absolute_import
# from .base_model_ import Model
from datetime import date, datetime
#from typing import List, Dict
from ..util import deserialize_model

from sqlalchemy import Table, Column, ForeignKey, String, Integer, Text
from sqlalchemy.orm import relationship, backref
from swagger_server.models.base import Base


# class Alarm(Model):
class Alarm(Base):
    __tablename__ = 'alarms'

    time = Column(Integer)
    goodmorning = Column(String(256))

    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, id: int=None, time: int=None, goodmorning: str=None):
        """
        Alarm - a model defined in Swagger

        :param id: The id of this Alarm.
        :type id: int
        :param time: The time of this Alarm.
        :type time: int
        :param goodmorning: The goodmorning of this Alarm.
        :type goodmorning: str
        """
        self.swagger_types = {
            'id': int,
            'time': int,
            'goodmorning': str
        }

        self.attribute_map = {
            'id': 'id',
            'time': 'time',
            'goodmorning': 'goodmorning'
        }

        self._id = id
        self._time = time
        self._goodmorning = goodmorning

    @classmethod
    def from_dict(cls, dikt) -> 'Alarm':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Alarm of this Alarm.
        :rtype: Alarm
        """
        return deserialize_model(dikt, cls)

    # @property
    # def id(self) -> int:
    #     """
    #     Gets the id of this Alarm.
    #
    #     :return: The id of this Alarm.
    #     :rtype: int
    #     """
    #     return self._id
    #
    # @id.setter
    # def id(self, id: int):
    #     """
    #     Sets the id of this Alarm.
    #
    #     :param id: The id of this Alarm.
    #     :type id: int
    #     """
    #
    #     self._id = id

    @property
    def time(self) -> int:
        """
        Gets the time of this Alarm.

        :return: The time of this Alarm.
        :rtype: int
        """
        return self._time

    @time.setter
    def time(self, time: int):
        """
        Sets the time of this Alarm.

        :param time: The time of this Alarm.
        :type time: int
        """

        self._time = time

    @property
    def goodmorning(self) -> str:
        """
        Gets the goodmorning of this Alarm.
        Goodmorning message

        :return: The goodmorning of this Alarm.
        :rtype: str
        """
        return self._goodmorning

    @goodmorning.setter
    def goodmorning(self, goodmorning: str):
        """
        Sets the goodmorning of this Alarm.
        Goodmorning message

        :param goodmorning: The goodmorning of this Alarm.
        :type goodmorning: str
        """

        self._goodmorning = goodmorning
